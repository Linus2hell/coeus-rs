name: Test & Release

on:
  push:
      tags: [ v* ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PACKAGE_NAME: coeus_python
  PYTHON_VERSION: "3.9" # to build abi3 wheels

jobs:
  macos:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: aarch64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels - aarch64
        uses: messense/maturin-action@v1
        with:
          target: aarch64
          args: --release --out dist --sdist
          maturin-version: "v0.14.10"
          working-directory: "coeus-python"
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist
          maturin-version: "v0.14.10"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: coeus-python/dist

  # windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       target: [x64, x86]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         architecture: ${{ matrix.target }}
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         default: true
  #     - name: Build wheels
  #       uses: messense/maturin-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         args: --release --out dist
  #         maturin-version: "v0.14.10"
  #     - name: Install built wheel
  #       shell: bash
  #       run: |
  #         python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
  #         pip install pytest
  #         python -m pytest -v
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
          maturin-version: "v0.14.10"
          working-directory: "coeus-python"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: coeus-python/dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
          maturin-version: "v0.14.10"
          working-directory: "coeus-python"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: coeus-python/dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --out dist
          maturin-version: "v0.14.10"
          working-directory: "coeus-python"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: coeus-python/dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release --out dist
          maturin-version: "v0.14.10"
          working-directory: "coeus-python"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: coeus-python/dist
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, linux, linux-cross, musllinux, musllinux-cross ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: "marvinpinto/action-automatic-releases@d68defdd11f9dcc7f52f35c1b7c236ee7513bcc1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.whl